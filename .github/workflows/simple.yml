# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  workflow_dispatch:

  # Triggers the workflow on push or pull request events but only for the "master" branch
  #push:
  #  branches: [ "master" ]
  #pull_request:
  #  branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  #workflow_dispatch:

env:
  DAY_OF_WEEK: Funday
  testvar: value-1

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  mainjob:
    name: 'Print the env vars'
    runs-on: ubuntu-latest

    env:
      Greeting: Dear
      test-var: value-2

    steps:
    - name: print-valuese-of-env-vars
      run: |
        echo "$Greeting $First_name. Today is $DAY_OF_WEEK"
        echo "testvar $testvar"
        echo "testvar ${{ env.testvar }}"
      env: 
        First_name: Student
        testvar: values-3   
    
    - name: Set the env value and store
      id: step_one
      run: |
        echo "action_state=yellow" >> $GITHUB_ENV

    - name: Use the env value
      id: step-two
      run: |
        echo "${{ env.action_state }}" # THis will output 'yellow'


  # This workflow contains a single job called "build-app"
  build-app:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3


      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hi, Juergen!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          echo "${{ github.workspace }}"

  package:
    needs: [build-app]
    runs-on:
      - self-hosted
      - label-1

    steps:
      - name: Show content of scratch
        run: |
          echo Hi, Juergen!
          echo We want to access to the local self-hosted machine....
          echo Current directory: `pwd`
          ls -al
          echo --------
          ls /home/scratch/keep/js

      - name: Show content of master
        run: |
          ls -al /home/m1/master

      - name: Copy apache from master to scratch/keep/js/Linux
        run: |
          mkdir -p /home/scratch/keep/js/Linux/TEMP/apache
          cp -TRv /home/m1/master/apache_2.4.57 /home/scratch/keep/js/Linux/TEMP/apache



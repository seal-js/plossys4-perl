%!PS-Adobe-3.0
[ /Author (Stefan Scherer)
/Title (Sample A5 doc)

/DOCINFO pdfmark

%!PS-Adobe-3.0
%%FLPS - 2.0
%%
%% @(#) PLOSSYS-Printer Version 5.3.5 22.03.2006
%% SEAL Systems
%!PS-Adobe-3.0
%%Title: Microsoft Word - sample-a3
%%Creator: PScript5.dll Version 5.2.2
%%CreationDate: 12/8/2006 9:48:20
%%For: Stefan
%%BoundingBox: (atend)
%%Pages: (atend)
%%Orientation: Portrait
%%PageOrder: Special
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentData: Clean7Bit
%%TargetDevice: (SEAL PS Generic) (3010.814) 3
%%LanguageLevel: 3

%%
%%Start of P2P  Data ===================================
%%

%%PLSHED: $ PLS_PLOTCOPY == "0"

%%
%%End   of P2P  Data ===================================
%%%%EndComments

%%BeginDefaults
%%PageBoundingBox: 14 14 842 1191
%%ViewingOrientation: 1 0 0 1
%%EndDefaults


%%BeginProlog
%%BeginResource: file Pscript_WinNT_VMErrorHandler 5.0 0
/currentpacking where{pop/oldpack currentpacking def/setpacking where{pop false
setpacking}if}if/$brkpage 64 dict def $brkpage begin/prnt{dup type/stringtype
ne{=string cvs}if dup length 6 mul/tx exch def/ty 10 def currentpoint/toy exch
def/tox exch def 1 setgray newpath tox toy 2 sub moveto 0 ty rlineto tx 0
rlineto 0 ty neg rlineto closepath fill tox toy moveto 0 setgray show}bind def
/nl{currentpoint exch pop lmargin exch moveto 0 -10 rmoveto}def/=={/cp 0 def
typeprint nl}def/typeprint{dup type exec}readonly def/lmargin 72 def/rmargin 72
def/tprint{dup length cp add rmargin gt{nl/cp 0 def}if dup length cp add/cp
exch def prnt}readonly def/cvsprint{=string cvs tprint( )tprint}readonly def
/integertype{cvsprint}readonly def/realtype{cvsprint}readonly def/booleantype
{cvsprint}readonly def/operatortype{(--)tprint =string cvs tprint(-- )tprint}
readonly def/marktype{pop(-mark- )tprint}readonly def/dicttype{pop
(-dictionary- )tprint}readonly def/nulltype{pop(-null- )tprint}readonly def
/filetype{pop(-filestream- )tprint}readonly def/savetype{pop(-savelevel- )
tprint}readonly def/fonttype{pop(-fontid- )tprint}readonly def/nametype{dup
xcheck not{(/)tprint}if cvsprint}readonly def/stringtype{dup rcheck{(\()tprint
tprint(\))tprint}{pop(-string- )tprint}ifelse}readonly def/arraytype{dup rcheck
{dup xcheck{({)tprint{typeprint}forall(})tprint}{([)tprint{typeprint}forall(])
tprint}ifelse}{pop(-array- )tprint}ifelse}readonly def/packedarraytype{dup
rcheck{dup xcheck{({)tprint{typeprint}forall(})tprint}{([)tprint{typeprint}
forall(])tprint}ifelse}{pop(-packedarray- )tprint}ifelse}readonly def/courier
/Courier findfont 10 scalefont def end errordict/handleerror{systemdict begin
$error begin $brkpage begin newerror{/newerror false store vmstatus pop pop 0
ne{grestoreall}if initgraphics courier setfont lmargin 720 moveto errorname
(VMerror)eq{version cvi 2016 ge{userdict/ehsave known{clear userdict/ehsave get
restore 2 vmreclaim}if vmstatus exch pop exch pop PrtVMMsg}if}if systemdict
/showpage get exec(%%[ Error: )print errorname =print(; OffendingCommand: )
print/command load =print( ]%%)= flush}if end end end}dup 0 systemdict put dup
4 $brkpage put bind readonly put/currentpacking where{pop/setpacking where{pop
oldpack setpacking}if}if
%%EndResource
userdict /Pscript_WinNT_Incr 230 dict dup begin put
%%BeginResource: file Pscript_FatalError 5.0 0
userdict begin/FatalErrorIf{{initgraphics findfont 1 index 0 eq{exch pop}{dup
length dict begin{1 index/FID ne{def}{pop pop}ifelse}forall/Encoding
{ISOLatin1Encoding}stopped{StandardEncoding}if def currentdict end
/ErrFont-Latin1 exch definefont}ifelse exch scalefont setfont counttomark 3 div
cvi{moveto show}repeat showpage quit}{cleartomark}ifelse}bind def end
%%EndResource
userdict begin/PrtVMMsg{vmstatus exch sub exch pop gt{[
(Dieser Druckauftrag erfordert mehr Speicher, als auf diesem Drucker vorhanden ist. )
100 500
(Versuchen Sie es mit einer oder mehreren der folgenden Methoden und drucken Sie dann erneut:)
100 485(Wählen Sie für das Ausgabeformat die Option "Optimale Portierung".)115
470
(Stellen Sie sicher, daß auf der Registerkarte "Geräteeinstellungen" die Angabe für "Verfügbarer Postscript-Speicher" korrekt ist.)
115 455(Reduzieren Sie die Anzahl der im Dokument verwendeten Schriftarten. )
115 440(Drucken Sie das Dokument in verschiedenen Teilstücken. )115 425 12
/Times-Roman showpage(%%[ PrinterError: Low Printer VM ]%%)= true FatalErrorIf}
if}bind def end version cvi 2016 ge{/VM?{pop}bind def}{/VM? userdict/PrtVMMsg
get def}ifelse
105000 VM?
%%BeginResource: file Pscript_Win_Basic 5.0 0
/d/def load def/,/load load d/~/exch , d/?/ifelse , d/!/pop , d/`/begin , d/^
/index , d/@/dup , d/+/translate , d/$/roll , d/U/userdict , d/M/moveto , d/-
/rlineto , d/&/currentdict , d/:/gsave , d/;/grestore , d/F/false , d/T/true ,
d/N/newpath , d/E/end , d/Ac/arc , d/An/arcn , d/A/ashow , d/D/awidthshow , d/C
/closepath , d/V/div , d/O/eofill , d/L/fill , d/I/lineto , d/-c/curveto , d/-M
/rmoveto , d/+S/scale , d/Ji/setfont , d/Lc/setlinecap , d/Lj/setlinejoin , d
/Lw/setlinewidth , d/Lm/setmiterlimit , d/sd/setdash , d/S/show , d/LH/showpage
, d/K/stroke , d/W/widthshow , d/R/rotate , d/L2? false/languagelevel where{pop
languagelevel 2 ge{pop true}if}if d L2?{/xS/xshow , d/yS/yshow , d/zS/xyshow ,
d}if/b{bind d}bind d/bd{bind d}bind d/xd{~ d}bd/ld{, d}bd/bn/bind ld/lw/Lw ld
/lc/Lc ld/lj/Lj ld/sg/setgray ld/ADO_mxRot null d/self & d/OrgMx matrix
currentmatrix d/reinitialize{: OrgMx setmatrix[/TextInit/GraphInit/UtilsInit
counttomark{@ where{self eq}{F}?{cvx exec}{!}?}repeat cleartomark ;}b
/initialize{`{/Pscript_Win_Data where{!}{U/Pscript_Win_Data & put}?/ADO_mxRot ~
d/TextInitialised? F d reinitialize E}{U/Pscript_Win_Data 230 dict @ ` put
/ADO_mxRot ~ d/TextInitialised? F d reinitialize}?}b/terminate{!{& self eq
{exit}{E}?}loop E}b/suspend/terminate , d/resume{` Pscript_Win_Data `}b U `
/lucas 21690 d/featurebegin{countdictstack lucas[}b/featurecleanup{stopped
{cleartomark @ lucas eq{! exit}if}loop countdictstack ~ sub @ 0 gt{{E}repeat}
{!}?}b E/snap{transform 0.25 sub round 0.25 add ~ 0.25 sub round 0.25 add ~
itransform}b/dsnap{dtransform round ~ round ~ idtransform}b/nonzero_round{@ 0.5
ge{round}{@ -0.5 lt{round}{0 ge{1}{-1}?}?}?}b/nonzero_dsnap{dtransform
nonzero_round ~ nonzero_round ~ idtransform}b U<04>cvn{}put/rr{1 ^ 0 - 0 ~ -
neg 0 - C}b/irp{4 -2 $ + +S fx 4 2 $ M 1 ^ 0 - 0 ~ - neg 0 -}b/rp{4 2 $ M 1 ^ 0
- 0 ~ - neg 0 -}b/solid{[]0 sd}b/g{@ not{U/DefIf_save save put}if U/DefIf_bool
2 ^ put}b/DefIf_El{if U/DefIf_bool get not @{U/DefIf_save get restore}if}b/e
{DefIf_El !}b/UDF{L2?{undefinefont}{!}?}b/UDR{L2?{undefineresource}{! !}?}b
/freeVM{/Courier findfont[40 0 0 -40 0 0]makefont Ji 2 vmreclaim}b/hfRedefFont
{findfont @ length dict `{1 ^/FID ne{d}{! !}?}forall & E @ ` ~{/CharStrings 1
dict `/.notdef 0 d & E d}if/Encoding 256 array 0 1 255{1 ^ ~/.notdef put}for d
E definefont !}bind d/hfMkCIDFont{/CIDFont findresource @ length 2 add dict `{1
^ @/FID eq ~ @/XUID eq ~/UIDBase eq or or{! !}{d}?}forall/CDevProc ~ d/Metrics2
16 dict d/CIDFontName 1 ^ d & E 1 ^ ~/CIDFont defineresource ![~]composefont !}
bind d
%%EndResource
%%BeginResource: file Pscript_Win_Utils_L2 5.0 0
/rf/rectfill , d/fx{1 1 dtransform @ 0 ge{1 sub 0.5}{1 add -0.5}? 3 -1 $ @ 0 ge
{1 sub 0.5}{1 add -0.5}? 3 1 $ 4 1 $ idtransform 4 -2 $ idtransform}b/BZ{4 -2 $
snap + +S fx rf}b/rs/rectstroke , d/rc/rectclip , d/UtilsInit{currentglobal{F
setglobal}if}b/scol{! setcolor}b/colspA/DeviceGray d/colspABC/DeviceRGB d
/colspRefresh{colspABC setcolorspace}b/SetColSpace{colspABC setcolorspace}b
/resourcestatus where{!/ColorRendering/ProcSet resourcestatus{! ! T}{F}?}{F}?
not{/ColorRendering<</GetHalftoneName{currenthalftone @/HalftoneName known{
/HalftoneName get}{!/none}?}bn/GetPageDeviceName{currentpagedevice @
/PageDeviceName known{/PageDeviceName get @ null eq{!/none}if}{!/none}?}bn
/GetSubstituteCRD{!/DefaultColorRendering/ColorRendering resourcestatus{! !
/DefaultColorRendering}{(DefaultColorRendering*){cvn exit}127 string
/ColorRendering resourceforall}?}bn>>/defineresource where{!/ProcSet
defineresource !}{! !}?}if/buildcrdname{/ColorRendering/ProcSet findresource `
mark GetHalftoneName @ type @/nametype ne ~/stringtype ne and{!/none}if(.)
GetPageDeviceName @ type @/nametype ne ~/stringtype ne and{!/none}if(.)5 ^ 0 5
-1 1{^ length add}for string 6 1 $ 5 ^ 5{~ 1 ^ cvs length 1 ^ length 1 ^ sub
getinterval}repeat ! cvn 3 1 $ ! ! E}b/definecolorrendering{~ buildcrdname ~
/ColorRendering defineresource !}b/findcolorrendering where{!}{
/findcolorrendering{buildcrdname @/ColorRendering resourcestatus{! ! T}{
/ColorRendering/ProcSet findresource ` GetSubstituteCRD E F}?}b}?
/selectcolorrendering{findcolorrendering !/ColorRendering findresource
setcolorrendering}b/G2UBegin{findresource/FontInfo get/GlyphNames2Unicode get
`}bind d/G2CCBegin{findresource/FontInfo get/GlyphNames2HostCode get `}bind d
/G2UEnd{E}bind d/AddFontInfoBegin{/FontInfo 8 dict @ `}bind d/AddFontInfo{
/GlyphNames2Unicode 16 dict d/GlyphNames2HostCode 16 dict d}bind d
/AddFontInfoEnd{E d}bind d/T0AddCFFMtx2{/CIDFont findresource/Metrics2 get ` d
E}bind d
%%EndResource
end
%%EndProlog

%%BeginSetup
statusdict begin (%%[ ProductName: ) print product print ( ]%%)= flush end
[ 1 0 0 1 0 0 ] false Pscript_WinNT_Incr dup /initialize get exec
featurebegin{
%%BeginNonPPDFeature: JobTimeout 0
0 /languagelevel where{pop languagelevel}{1}ifelse 2 ge{1 dict dup/JobTimeout  4 -1 roll put setuserparams}{statusdict/setjobtimeout get exec}ifelse
%%EndNonPPDFeature
}featurecleanup

featurebegin{
%%BeginNonPPDFeature: WaitTimeout 300
300 /languagelevel where{pop languagelevel}{1}ifelse 2 ge{1 dict dup/WaitTimeout 4 -1 roll put setuserparams}{statusdict/waittimeout 3 -1 roll put}ifelse
%%EndNonPPDFeature
}featurecleanup

featurebegin{
%%BeginFeature: *Duplex None
%%PLSHED: $ PLS_DUPLEX == !NONE!
%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *PageSize A3
<</PageSize[ 842 1191]>>setpagedevice 
%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *Resolution 600dpi
<</HWResolution [600 600] put setpagedevice
%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *P001_Sizemode FORMATSIZE
%%PLSHED: $ PLS_SIZEMODE == !FORMATSIZE!
%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *InstalledMemory 24Meg

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *POSTSCRIPTPASSTHROUGH False
%% PostScript Passthrough off
%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *IGNOREFIRSTBITMAP False
%% Ignore First Bitmap off
%%EndFeature
}featurecleanup
1 setlinecap 1 setlinejoin
/mysetup [ 72 600 V 0 0 -72 600 V 14.00031 1190.99902 ] def 
%%EndSetup

userdict begin /ehsave save def end
%%Page: 1 1
%%PageBoundingBox: 14 14 842 1191
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Win_GdiObject 5.0 0
/SavedCTM null d/CTMsave{/SavedCTM SavedCTM currentmatrix d}b/CTMrestore
{SavedCTM setmatrix}b/mp null d/ADO_mxRot null d/GDIHMatrix null d
/GDIHPatternDict 22 dict d GDIHPatternDict `/PatternType 1 d/PaintType 2 d/Reps
L2?{1}{5}? d/XStep 8 Reps mul d/YStep XStep d/BBox[0 0 XStep YStep]d/TilingType
1 d/PaintProc{` 1 Lw[]0 sd PaintData , exec E}b/FGnd null d/BGnd null d
/HS_Horizontal{horiz}b/HS_Vertical{vert}b/HS_FDiagonal{fdiag}b/HS_BDiagonal
{biag}b/HS_Cross{horiz vert}b/HS_DiagCross{fdiag biag}b/MaxXYStep XStep YStep
gt{XStep}{YStep}? d/horiz{Reps{0 4 M XStep 0 - 0 8 +}repeat 0 -8 Reps mul + K}b
/vert{Reps{4 0 M 0 YStep - 8 0 +}repeat 0 -8 Reps mul + K}b/biag{Reps{0 0 M
MaxXYStep @ - 0 YStep neg M MaxXYStep @ - 0 8 +}repeat 0 -8 Reps mul + 0 YStep
M 8 8 - K}b/fdiag{Reps{0 0 M MaxXYStep @ neg - 0 YStep M MaxXYStep @ neg - 0 8
+}repeat 0 -8 Reps mul + MaxXYStep @ M 8 -8 - K}b E/makehatch{4 -2 $/yOrg ~ d
/xOrg ~ d GDIHPatternDict/PaintData 3 -1 $ put CTMsave GDIHMatrix setmatrix
GDIHPatternDict matrix xOrg yOrg + mp CTMrestore ~ U ~ 2 ^ put}b/h0{/h0
/HS_Horizontal makehatch}b/h1{/h1/HS_Vertical makehatch}b/h2{/h2/HS_FDiagonal
makehatch}b/h3{/h3/HS_BDiagonal makehatch}b/h4{/h4/HS_Cross makehatch}b/h5{/h5
/HS_DiagCross makehatch}b/GDIBWPatternMx null d/pfprep{save 8 1 $
/PatternOfTheDay 8 1 $ GDIBWPatternDict `/yOrg ~ d/xOrg ~ d/PaintData ~ d/yExt
~ d/Width ~ d/BGnd ~ d/FGnd ~ d/Height yExt RepsV mul d/mx[Width 0 0 Height 0
0]d E build_pattern ~ !}b/pfbf{/fEOFill ~ d pfprep hbf fEOFill{O}{L}? restore}b
/GraphInit{GDIHMatrix null eq{/SavedCTM matrix d : ADO_mxRot concat 0 0 snap +
: 0.48 @ GDIHPatternDict ` YStep mul ~ XStep mul ~ nonzero_dsnap YStep V ~
XStep V ~ E +S/GDIHMatrix matrix currentmatrix readonly d ; : 0.24 -0.24 +S
GDIBWPatternDict ` Width Height E nonzero_dsnap +S/GDIBWPatternMx matrix
currentmatrix readonly d ; ;}if}b
%%EndResource
%%BeginResource: file Pscript_Win_GdiObject_L3 5.0 0
/GDIBWPatternDict 25 dict @ `/PatternType 1 d/PaintType 1 d/RepsV 1 d/RepsH 1 d
/BBox[0 0 RepsH 1]d/TilingType 1 d/XStep 1 d/YStep 1 d/Height 8 RepsV mul d
/Width 8 d/mx[Width 0 0 Height neg 0 Height]d/FGnd null d/BGnd null d
/SetBGndFGnd{BGnd null ne{BGnd aload ! scol BBox aload ! 2 ^ sub ~ 3 ^ sub ~
rf}if FGnd null ne{FGnd aload ! scol}if}b/PaintProc{` SetBGndFGnd RepsH{Width
Height F mx PaintData imagemask Width 0 +}repeat E}b E d/mp/makepattern , d
/build_pattern{CTMsave GDIBWPatternMx setmatrix/nupangle where{! nupangle -90
eq{nupangle R}if}if GDIBWPatternDict @ ` Width Height ne{Width Height gt{Width
Height V 1}{1 Height Width V}? +S}if xOrg yOrg E matrix + mp CTMrestore}b/hbf
{setpattern}b/hf{:/fEOFill ~ d ~ ! setpattern fEOFill{O}{L}? ;}b/pbf{: !
/fEOFill ~ d GDIBWPatternDict `/yOrg ~ d/xOrg ~ d/PaintData ~ d/OutputBPP ~ d
/Height ~ d/Width ~ d/PaintType 1 d/PatternType 1 d/TilingType 1 d/BBox[0 0
Width Height]d/XStep Width d/YStep Height d/mx xOrg yOrg matrix + d 20 dict @ `
/ImageType 1 d/Width Width d/Height Height d/ImageMatrix[1 0 0 1 0 0]d
/BitsPerComponent 8 d OutputBPP 24 eq{/Decode[0 1 0 1 0 1]d}{OutputBPP 8 eq{
/Decode[0 1]d}{/Decode[0 1 0 1 0 1 0 1]d}?}?/DataSource{PaintData}d E/ImageDict
~ d/PaintProc{` ImageDict image E}b & mx makepattern setpattern E fEOFill{O}{L}
? ;}b/mask_pbf{:/fEOFill ~ d 20 dict `/yOrg ~ d/xOrg ~ d/PaintData ~ d/Height ~
d/Width ~ d/PatternType 1 d/PaintType 2 d/TilingType 1 d/BBox[0 0 Width Height]
d/XStep Width d/YStep Height d/mx xOrg yOrg matrix + d/PaintProc{` Width Height
T 1 1 dtransform abs ~ abs ~ 0 0 3 -1 $ 0 0 6 array astore{PaintData}imagemask
E}b & mx makepattern setpattern E fEOFill{O}{L}? ;}b/grf4{4 dict `/ShadingType
4 d/DataSource ~ d/ColorSpace ~ d & E shfill}b
%%EndResource
end reinitialize
N 5425 303 M 5466 303 I 5466 343 I 5425 343 I 5425 303 I C 
0 0.578 0.867 1 scol  O N 5474 303 M 5515 303 I 5515 343 I 5474 343 I 5474 303 I C 
 O N 5523 303 M 5564 303 I 5564 343 I 5523 343 I 5523 303 I C 
 O N 5376 351 M 5417 351 I 5417 392 I 5376 392 I 5376 351 I C 
 O N 5425 400 M 5466 400 I 5466 441 I 5425 441 I 5425 400 I C 
 O N 5474 400 M 5515 400 I 5515 441 I 5474 441 I 5474 400 I C 
 O N 5523 400 M 5564 400 I 5564 441 I 5523 441 I 5523 400 I C 
 O N 5572 449 M 5613 449 I 5613 490 I 5572 490 I 5572 449 I C 
 O : 5425 498 42 41 rc N 5425 498 M 5466 498 I 5466 539 I 5425 539 I 5425 498 I C 
 O ; : 5474 498 42 41 rc N 5474 498 M 5515 498 I 5515 539 I 5474 539 I 5474 498 I C 
 O ; : 5523 498 42 41 rc N 5523 498 M 5564 498 I 5564 539 I 5523 539 I 5523 498 I C 
 O ; N 5743 359 M 5743 358 I 5743 356 I 5742 354 I 5742 353 I 5742 352 I 5741 350 I 5741 349 I 5740 348 I 5740 347 I 5739 346 I 5738 345 I 5738 344 I 5737 343 I 5736 343 I 5735 342 I 5735 341 I 5734 340 I 5733 340 I 5732 339 I 5731 339 I 5730 338 I 5729 338 I 5728 337 I 5727 337 I 5725 336 I 5723 336 I 5721 335 I 5719 335 I 5710 332 I 5709 332 I 5708 332 I 5707 331 I 5706 331 I 5705 330 I 5705 330 I 5704 330 I 5704 329 I 5703 329 I 5703 328 I 5703 328 I 5702 327 I 5702 327 I 5702 326 I 5702 325 I 5702 325 I 5702 324 I 5702 324 I 5702 323 I 5702 322 I 5703 322 I 5703 321 I 5704 321 I 5704 320 I 5705 320 I 5705 320 I 5706 319 I 5707 319 I 5708 319 I 5709 319 I 5710 319 I 5711 319 I 5712 319 I 5713 319 I 5714 319 I 5716 319 I 5717 319 I 5718 319 I 5719 320 I 5721 320 I 5722 321 I 5724 321 I 5725 322 I 5726 322 I 5727 323 I 5728 323 I 5730 324 I 5731 325 I 5742 309 I 5740 308 I 5738 307 I 5737 306 I 5735 305 I 5733 304 I 5731 304 I 5729 303 I 5727 302 I 5725 302 I 5723 301 I 5721 301 I 5719 301 I 5717 300 I 5715 300 I 5712 300 I 5710 300 I 5708 300 I 5706 300 I 5705 300 I 5703 301 I 5701 301 I 5699 301 I 5698 302 I 5696 302 I 5695 303 I 5693 303 I 5692 304 I 5690 305 I 5689 305 I 5688 306 I 5687 307 I 5685 308 I 5684 309 I 5683 310 I 5682 311 I 5681 312 I 5680 313 I 5680 315 I 5679 316 I 5678 317 I 5678 319 I 5677 320 I 5677 321 I 5676 323 I 5676 324 I 5676 326 I 5676 328 I 5676 329 I 5676 331 I 5676 332 I 5676 333 I 5676 335 I 5676 336 I 5677 337 I 5677 338 I 5677 339 I 5678 340 I 5678 341 I 5679 342 I 5679 343 I 5680 344 I 5680 345 I 5681 346 I 5682 346 I 5683 347 I 5683 348 I 5684 349 I 5685 349 I 5686 350 I 5687 350 I 5688 351 I 5689 352 I 5691 352 I 5693 353 I 5695 354 I 5697 355 I 5708 357 I 5710 358 I 5712 359 I 5713 359 I 5713 359 I 5714 360 I 5715 360 I 5715 361 I 5715 361 I 5716 362 I 5716 362 I 5716 363 I 5717 363 I 5717 364 I 5717 365 I 5717 366 I 5717 366 I 5716 367 I 5716 368 I 5716 369 I 5715 369 I 5715 370 I 5714 371 I 5713 371 I 5712 372 I 5711 372 I 5710 372 I 5709 372 I 5707 373 I 5706 373 I 5704 373 I 5702 373 I 5701 373 I 5699 373 I 5697 372 I 5696 372 I 5694 372 I 5692 371 I 5691 371 I 5689 370 I 5688 370 I 5686 369 I 5685 368 I 5683 368 I 5682 367 I 5681 366 I 5679 366 I 5671 383 I 5673 384 I 5675 385 I 5677 386 I 5678 387 I 5680 387 I 5682 388 I 5684 389 I 5686 389 I 5688 390 I 5690 390 I 5692 391 I 5695 391 I 5697 391 I 5699 391 I 5702 391 I 5704 391 I 5706 391 I 5708 391 I 5710 391 I 5712 391 I 5714 391 I 5716 390 I 5718 390 I 5720 389 I 5721 389 I 5723 388 I 5725 388 I 5726 387 I 5728 386 I 5729 385 I 5731 384 I 5732 383 I 5733 382 I 5734 381 I 5735 380 I 5737 379 I 5737 377 I 5738 376 I 5739 375 I 5740 373 I 5741 372 I 5741 370 I 5742 368 I 5742 367 I 5742 365 I 5743 363 I 5743 361 I 5743 359 I C 
0.121 0.102 0.09 1 scol  O N 5763 390 M 5816 390 I 5816 371 I 5786 371 I 5786 353 I 5808 353 I 5808 335 I 5786 335 I 5786 320 I 5813 320 I 5814 302 I 5763 302 I 5763 390 I C 
 O N 5881 390 M 5906 390 I 5879 302 I 5855 302 I 5827 390 I 5851 390 I 5856 373 I 5877 373 I 5881 390 I C 
5868 339 M 5872 355 I 5861 355 I 5864 341 I 5865 339 I 5865 337 I 5865 335 I 5866 333 I 5866 331 I 5866 330 I 5866 328 I 5867 327 I 5867 328 I 5867 330 I 5867 331 I 5867 333 I 5867 335 I 5868 336 I 5868 338 I 5868 339 I C 
 O N 5971 390 M 5975 371 I 5945 371 I 5945 302 I 5922 302 I 5922 390 I 5971 390 I C 
 O N 6019 301 M 6017 301 I 6016 301 I 6014 301 I 6013 301 I 6012 302 I 6010 302 I 6009 302 I 6008 303 I 6006 303 I 6005 304 I 6004 304 I 6003 305 I 6002 306 I 6001 306 I 6000 307 I 5999 308 I 5998 309 I 5997 310 I 5996 311 I 5995 312 I 5994 313 I 5994 314 I 5993 315 I 5993 316 I 5992 317 I 5992 318 I 5992 319 I 5991 321 I 5991 322 I 5991 323 I 5991 325 I 5991 326 I 5991 327 I 5991 328 I 5991 329 I 5991 330 I 5991 331 I 5992 332 I 5992 333 I 5992 334 I 5992 335 I 5993 335 I 5993 336 I 5994 337 I 5994 338 I 5995 339 I 5996 339 I 5996 340 I 5997 341 I 5997 341 I 5998 342 I 5999 343 I 6000 343 I 6000 344 I 6001 344 I 6002 344 I 6004 345 I 6006 346 I 6009 347 I 6012 348 I 6020 351 I 6022 351 I 6024 352 I 6026 353 I 6027 353 I 6029 354 I 6030 355 I 6031 356 I 6032 357 I 6033 358 I 6034 359 I 6035 360 I 6035 362 I 6035 363 I 6036 364 I 6036 365 I 6036 367 I 6036 368 I 6036 369 I 6036 370 I 6036 371 I 6035 371 I 6035 372 I 6035 373 I 6034 374 I 6034 375 I 6034 375 I 6033 376 I 6033 377 I 6032 377 I 6031 378 I 6031 379 I 6030 379 I 6028 380 I 6027 381 I 6025 382 I 6024 382 I 6023 382 I 6022 383 I 6021 383 I 6020 383 I 6018 383 I 6016 383 I 6014 383 I 6013 383 I 6011 383 I 6010 383 I 6008 382 I 6007 382 I 6005 382 I 6004 381 I 6002 381 I 6001 380 I 6000 380 I 5998 379 I 5997 378 I 5995 377 I 5994 377 I 5993 376 I 5988 384 I 5990 385 I 5991 386 I 5993 386 I 5995 387 I 5996 388 I 5998 389 I 6000 389 I 6001 390 I 6003 390 I 6005 390 I 6007 391 I 6009 391 I 6010 391 I 6012 391 I 6014 392 I 6016 392 I 6017 392 I 6019 392 I 6020 391 I 6022 391 I 6023 391 I 6024 391 I 6025 391 I 6027 390 I 6028 390 I 6029 390 I 6030 389 I 6031 389 I 6032 388 I 6033 388 I 6034 387 I 6036 386 I 6037 385 I 6038 384 I 6040 383 I 6041 382 I 6042 381 I 6043 380 I 6044 378 I 6044 377 I 6045 376 I 6046 374 I 6046 373 I 6047 371 I 6047 370 I 6047 368 I 6048 367 I 6048 365 I 6048 364 I 6048 363 I 6047 362 I 6047 361 I 6047 360 I 6047 359 I 6046 358 I 6046 357 I 6046 356 I 6045 355 I 6045 354 I 6044 353 I 6044 352 I 6043 352 I 6043 351 I 6042 350 I 6041 349 I 6041 349 I 6040 348 I 6039 347 I 6038 347 I 6037 346 I 6037 345 I 6036 345 I 6035 344 I 6034 344 I 6033 344 I 6032 343 I 6029 342 I 6027 341 I 6016 338 I 6015 337 I 6013 337 I 6011 336 I 6010 335 I 6009 335 I 6007 334 I 6006 333 I 6005 332 I 6005 331 I 6004 331 I 6003 330 I 6003 329 I 6002 327 I 6002 326 I 6002 325 I 6002 324 I 6002 323 I 6002 322 I 6002 321 I 6002 321 I 6002 320 I 6003 319 I 6003 319 I 6003 318 I 6003 317 I 6004 317 I 6004 316 I 6005 315 I 6005 315 I 6006 314 I 6006 314 I 6007 313 I 6007 313 I 6008 312 I 6009 312 I 6009 312 I 6011 311 I 6012 310 I 6014 310 I 6016 310 I 6017 310 I 6019 310 I 6021 310 I 6022 310 I 6024 310 I 6025 310 I 6026 310 I 6027 310 I 6028 311 I 6030 311 I 6031 312 I 6032 312 I 6033 313 I 6035 313 I 6036 314 I 6038 315 I 6039 316 I 6041 317 I 6045 309 I 6044 308 I 6042 307 I 6041 307 I 6039 306 I 6037 305 I 6036 304 I 6034 304 I 6032 303 I 6031 303 I 6029 302 I 6027 302 I 6026 302 I 6024 301 I 6022 301 I 6021 301 I 6019 301 I C 
 O N 6089 355 M 6089 390 I 6100 390 I 6100 356 I 6128 303 I 6116 303 I 6099 336 I 6099 338 I 6098 339 I 6097 341 I 6097 342 I 6096 343 I 6095 344 I 6095 345 I 6095 346 I 6094 345 I 6094 344 I 6093 343 I 6093 342 I 6092 340 I 6091 339 I 6091 338 I 6090 336 I 6074 303 I 6061 303 I 6089 355 I C 
 O N 6172 301 M 6170 301 I 6169 301 I 6167 301 I 6166 301 I 6164 302 I 6163 302 I 6162 302 I 6161 303 I 6159 303 I 6158 304 I 6157 304 I 6156 305 I 6155 306 I 6153 306 I 6152 307 I 6152 308 I 6151 309 I 6150 310 I 6149 311 I 6148 312 I 6147 313 I 6147 314 I 6146 315 I 6146 316 I 6145 317 I 6145 318 I 6144 319 I 6144 321 I 6144 322 I 6144 323 I 6144 325 I 6144 326 I 6144 327 I 6144 328 I 6144 329 I 6144 330 I 6144 331 I 6144 332 I 6145 333 I 6145 334 I 6145 335 I 6146 335 I 6146 336 I 6147 337 I 6147 338 I 6148 339 I 6148 339 I 6149 340 I 6150 341 I 6150 341 I 6151 342 I 6152 343 I 6153 343 I 6153 344 I 6154 344 I 6155 344 I 6157 345 I 6159 346 I 6162 347 I 6165 348 I 6173 351 I 6175 351 I 6177 352 I 6179 353 I 6180 353 I 6182 354 I 6183 355 I 6184 356 I 6185 357 I 6186 358 I 6187 359 I 6187 360 I 6188 362 I 6188 363 I 6189 364 I 6189 365 I 6189 367 I 6189 368 I 6189 369 I 6189 370 I 6189 371 I 6188 371 I 6188 372 I 6188 373 I 6187 374 I 6187 375 I 6187 375 I 6186 376 I 6185 377 I 6185 377 I 6184 378 I 6184 379 I 6183 379 I 6181 380 I 6180 381 I 6178 382 I 6177 382 I 6176 382 I 6175 383 I 6174 383 I 6173 383 I 6171 383 I 6169 383 I 6167 383 I 6166 383 I 6164 383 I 6163 383 I 6161 382 I 6160 382 I 6158 382 I 6157 381 I 6155 381 I 6154 380 I 6152 380 I 6151 379 I 6150 378 I 6148 377 I 6147 377 I 6146 376 I 6141 384 I 6143 385 I 6144 386 I 6146 386 I 6147 387 I 6149 388 I 6151 389 I 6153 389 I 6154 390 I 6156 390 I 6158 390 I 6160 391 I 6161 391 I 6163 391 I 6165 391 I 6167 392 I 6169 392 I 6170 392 I 6172 392 I 6173 391 I 6175 391 I 6176 391 I 6177 391 I 6178 391 I 6180 390 I 6181 390 I 6182 390 I 6183 389 I 6184 389 I 6185 388 I 6186 388 I 6187 387 I 6188 386 I 6190 385 I 6191 384 I 6192 383 I 6194 382 I 6195 381 I 6196 380 I 6197 378 I 6197 377 I 6198 376 I 6199 374 I 6199 373 I 6200 371 I 6200 370 I 6200 368 I 6200 367 I 6201 365 I 6201 364 I 6200 363 I 6200 362 I 6200 361 I 6200 360 I 6200 359 I 6199 358 I 6199 357 I 6199 356 I 6198 355 I 6198 354 I 6197 353 I 6197 352 I 6196 352 I 6196 351 I 6195 350 I 6194 349 I 6193 349 I 6193 348 I 6192 347 I 6191 347 I 6190 346 I 6190 345 I 6189 345 I 6188 344 I 6187 344 I 6186 344 I 6185 343 I 6182 342 I 6179 341 I 6169 338 I 6168 337 I 6166 337 I 6164 336 I 6163 335 I 6161 335 I 6160 334 I 6159 333 I 6158 332 I 6158 331 I 6157 331 I 6156 330 I 6156 329 I 6155 327 I 6155 326 I 6155 325 I 6155 324 I 6155 323 I 6155 322 I 6155 321 I 6155 321 I 6155 320 I 6156 319 I 6156 319 I 6156 318 I 6156 317 I 6157 317 I 6157 316 I 6158 315 I 6158 315 I 6159 314 I 6159 314 I 6160 313 I 6160 313 I 6161 312 I 6161 312 I 6162 312 I 6164 311 I 6165 310 I 6167 310 I 6169 310 I 6170 310 I 6172 310 I 6174 310 I 6175 310 I 6176 310 I 6178 310 I 6179 310 I 6180 310 I 6181 311 I 6183 311 I 6184 312 I 6185 312 I 6186 313 I 6188 313 I 6189 314 I 6191 315 I 6192 316 I 6194 317 I 6198 309 I 6197 308 I 6195 307 I 6193 307 I 6192 306 I 6190 305 I 6189 304 I 6187 304 I 6185 303 I 6184 303 I 6182 302 I 6180 302 I 6179 302 I 6177 301 I 6175 301 I 6174 301 I 6172 301 I C 
 O N 6219 312 M 6243 312 I 6243 390 I 6253 390 I 6253 312 I 6276 312 I 6277 303 I 6219 303 I 6219 312 I C 
 O N 6302 390 M 6350 390 I 6350 381 I 6312 381 I 6312 349 I 6342 349 I 6342 340 I 6312 340 I 6312 312 I 6348 312 I 6349 303 I 6302 303 I 6302 390 I C 
 O N 6377 390 M 6387 390 I 6392 328 I 6392 327 I 6392 325 I 6392 324 I 6392 323 I 6392 322 I 6393 320 I 6393 318 I 6393 316 I 6393 314 I 6393 313 I 6393 312 I 6393 311 I 6393 312 I 6394 314 I 6394 315 I 6395 318 I 6395 320 I 6396 323 I 6397 325 I 6397 328 I 6415 390 I 6424 390 I 6442 325 I 6443 323 I 6443 321 I 6444 319 I 6444 317 I 6445 315 I 6445 314 I 6445 312 I 6446 311 I 6446 313 I 6446 314 I 6446 315 I 6446 317 I 6446 318 I 6446 319 I 6446 320 I 6446 322 I 6446 323 I 6446 324 I 6446 325 I 6446 326 I 6451 390 I 6462 390 I 6454 303 I 6439 303 I 6423 361 I 6422 363 I 6421 365 I 6421 367 I 6420 369 I 6420 371 I 6420 373 I 6420 374 I 6419 375 I 6419 374 I 6419 373 I 6419 371 I 6418 369 I 6418 367 I 6417 365 I 6417 362 I 6416 360 I 6400 303 I 6385 303 I 6377 390 I C 
 O : 6485 301 60 92 rc N 6516 301 M 6515 301 I 6513 301 I 6512 301 I 6510 301 I 6509 302 I 6508 302 I 6506 302 I 6505 303 I 6504 303 I 6503 304 I 6501 304 I 6500 305 I 6499 306 I 6498 306 I 6497 307 I 6496 308 I 6495 309 I 6494 310 I 6493 311 I 6493 312 I 6492 313 I 6491 314 I 6491 315 I 6490 316 I 6490 317 I 6489 318 I 6489 319 I 6489 321 I 6488 322 I 6488 323 I 6488 325 I 6488 326 I 6488 327 I 6488 328 I 6488 329 I 6488 330 I 6489 331 I 6489 332 I 6489 333 I 6490 334 I 6490 335 I 6490 335 I 6491 336 I 6491 337 I 6492 338 I 6492 339 I 6493 339 I 6494 340 I 6494 341 I 6495 341 I 6496 342 I 6496 343 I 6497 343 I 6498 344 I 6499 344 I 6499 344 I 6501 345 I 6504 346 I 6506 347 I 6509 348 I 6518 351 I 6520 351 I 6522 352 I 6523 353 I 6525 353 I 6526 354 I 6527 355 I 6529 356 I 6530 357 I 6530 358 I 6531 359 I 6532 360 I 6532 362 I 6533 363 I 6533 364 I 6533 365 I 6533 367 I 6533 368 I 6533 369 I 6533 370 I 6533 371 I 6533 371 I 6533 372 I 6532 373 I 6532 374 I 6532 375 I 6531 375 I 6531 376 I 6530 377 I 6529 377 I 6529 378 I 6528 379 I 6527 379 I 6526 380 I 6524 381 I 6523 382 I 6521 382 I 6521 382 I 6520 383 I 6519 383 I 6518 383 I 6516 383 I 6513 383 I 6512 383 I 6510 383 I 6509 383 I 6507 383 I 6506 382 I 6504 382 I 6503 382 I 6501 381 I 6500 381 I 6498 380 I 6497 380 I 6496 379 I 6494 378 I 6493 377 I 6491 377 I 6490 376 I 6485 384 I 6487 385 I 6489 386 I 6490 386 I 6492 387 I 6494 388 I 6495 389 I 6497 389 I 6499 390 I 6501 390 I 6502 390 I 6504 391 I 6506 391 I 6508 391 I 6510 391 I 6511 392 I 6513 392 I 6515 392 I 6516 392 I 6518 391 I 6519 391 I 6520 391 I 6522 391 I 6523 391 I 6524 390 I 6525 390 I 6526 390 I 6527 389 I 6529 389 I 6530 388 I 6531 388 I 6532 387 I 6533 386 I 6534 385 I 6536 384 I 6537 383 I 6538 382 I 6539 381 I 6540 380 I 6541 378 I 6542 377 I 6543 376 I 6543 374 I 6544 373 I 6544 371 I 6545 370 I 6545 368 I 6545 367 I 6545 365 I 6545 364 I 6545 363 I 6545 362 I 6545 361 I 6544 360 I 6544 359 I 6544 358 I 6543 357 I 6543 356 I 6543 355 I 6542 354 I 6542 353 I 6541 352 I 6541 352 I 6540 351 I 6539 350 I 6539 349 I 6538 349 I 6537 348 I 6536 347 I 6536 347 I 6535 346 I 6534 345 I 6533 345 I 6532 344 I 6531 344 I 6530 344 I 6529 343 I 6527 342 I 6524 341 I 6514 338 I 6512 337 I 6510 337 I 6509 336 I 6507 335 I 6506 335 I 6505 334 I 6504 333 I 6503 332 I 6502 331 I 6501 331 I 6501 330 I 6500 329 I 6500 327 I 6500 326 I 6500 325 I 6499 324 I 6499 323 I 6500 322 I 6500 321 I 6500 321 I 6500 320 I 6500 319 I 6500 319 I 6501 318 I 6501 317 I 6501 317 I 6502 316 I 6502 315 I 6503 315 I 6503 314 I 6504 314 I 6504 313 I 6505 313 I 6505 312 I 6506 312 I 6507 312 I 6508 311 I 6510 310 I 6511 310 I 6513 310 I 6515 310 I 6517 310 I 6518 310 I 6520 310 I 6521 310 I 6522 310 I 6523 310 I 6525 310 I 6526 311 I 6527 311 I 6528 312 I 6529 312 I 6531 313 I 6532 313 I 6533 314 I 6535 315 I 6536 316 I 6538 317 I 6543 309 I 6541 308 I 6539 307 I 6538 307 I 6536 306 I 6535 305 I 6533 304 I 6532 304 I 6530 303 I 6528 303 I 6527 302 I 6525 302 I 6523 302 I 6522 301 I 6520 301 I 6518 301 I 6516 301 I C 
 O ; N 5668 454 M 5679 454 I 5679 490 I 5684 490 I 5684 454 I 5694 454 I 5695 450 I 5668 450 I 5668 454 I C 
 O N 5709 490 M 5713 490 I 5713 470 I 5730 470 I 5730 490 I 5735 490 I 5735 450 I 5730 450 I 5730 467 I 5713 467 I 5713 450 I 5709 450 I 5709 490 I C 
 O N 5755 490 M 5777 490 I 5777 485 I 5759 485 I 5759 471 I 5773 471 I 5773 467 I 5759 467 I 5759 454 I 5776 454 I 5776 450 I 5755 450 I 5755 490 I C 
 O N 5810 490 M 5821 490 I 5822 490 I 5823 489 I 5824 489 I 5824 489 I 5825 489 I 5826 489 I 5827 489 I 5828 489 I 5828 488 I 5829 488 I 5830 487 I 5830 487 I 5831 487 I 5832 486 I 5832 485 I 5833 485 I 5833 484 I 5834 483 I 5834 483 I 5835 482 I 5835 481 I 5836 480 I 5836 480 I 5836 479 I 5837 478 I 5837 477 I 5837 476 I 5837 475 I 5837 473 I 5837 472 I 5837 471 I 5837 470 I 5837 468 I 5837 467 I 5837 466 I 5837 464 I 5837 463 I 5837 462 I 5836 461 I 5836 460 I 5835 459 I 5835 458 I 5834 457 I 5834 456 I 5833 455 I 5832 454 I 5832 454 I 5831 453 I 5830 453 I 5829 452 I 5829 452 I 5828 451 I 5827 451 I 5827 451 I 5826 451 I 5825 451 I 5825 450 I 5824 450 I 5823 450 I 5822 450 I 5821 450 I 5820 450 I 5819 450 I 5818 450 I 5810 450 I 5810 490 I C 
5820 454 M 5821 454 I 5823 454 I 5824 454 I 5825 455 I 5826 455 I 5826 455 I 5827 455 I 5827 456 I 5828 457 I 5829 458 I 5829 458 I 5830 459 I 5830 459 I 5831 460 I 5831 461 I 5831 461 I 5831 462 I 5832 463 I 5832 464 I 5832 466 I 5832 468 I 5832 470 I 5832 472 I 5832 474 I 5832 475 I 5832 477 I 5831 478 I 5831 479 I 5830 480 I 5830 482 I 5829 482 I 5829 483 I 5829 483 I 5828 484 I 5827 484 I 5827 484 I 5826 485 I 5826 485 I 5824 485 I 5823 485 I 5821 486 I 5820 486 I 5815 486 I 5815 454 I 5820 454 I C 
 O N 5854 490 M 5859 490 I 5859 450 I 5854 450 I 5854 490 I C 
 O N 5892 450 M 5890 450 I 5889 450 I 5887 450 I 5886 451 I 5885 451 I 5884 452 I 5882 452 I 5881 453 I 5881 454 I 5880 455 I 5879 456 I 5879 456 I 5878 457 I 5878 458 I 5877 459 I 5877 460 I 5876 461 I 5876 462 I 5876 464 I 5876 465 I 5875 466 I 5875 467 I 5875 469 I 5875 470 I 5875 471 I 5875 472 I 5875 474 I 5876 475 I 5876 476 I 5876 477 I 5876 478 I 5876 479 I 5877 480 I 5877 481 I 5878 481 I 5878 482 I 5878 483 I 5879 484 I 5880 485 I 5880 485 I 5881 486 I 5881 486 I 5882 487 I 5883 487 I 5883 488 I 5884 488 I 5885 489 I 5885 489 I 5886 489 I 5887 490 I 5888 490 I 5889 490 I 5890 490 I 5890 490 I 5891 490 I 5892 490 I 5894 490 I 5895 490 I 5897 490 I 5898 489 I 5900 489 I 5901 488 I 5902 488 I 5903 487 I 5903 469 I 5890 469 I 5891 473 I 5899 473 I 5899 485 I 5898 485 I 5898 485 I 5897 486 I 5896 486 I 5895 486 I 5895 486 I 5894 486 I 5893 486 I 5891 486 I 5890 486 I 5889 486 I 5888 486 I 5888 486 I 5887 485 I 5887 485 I 5886 485 I 5886 484 I 5885 484 I 5885 484 I 5884 483 I 5884 483 I 5883 482 I 5883 482 I 5883 481 I 5882 481 I 5882 480 I 5882 479 I 5881 477 I 5881 476 I 5881 474 I 5880 472 I 5880 470 I 5880 468 I 5881 466 I 5881 464 I 5881 463 I 5881 461 I 5882 460 I 5883 459 I 5883 458 I 5884 457 I 5884 457 I 5884 456 I 5885 456 I 5885 455 I 5886 455 I 5886 455 I 5887 454 I 5887 454 I 5888 454 I 5888 454 I 5889 454 I 5890 453 I 5892 453 I 5893 453 I 5894 454 I 5895 454 I 5896 454 I 5897 454 I 5898 455 I 5899 456 I 5900 456 I 5903 454 I 5901 453 I 5900 452 I 5899 451 I 5898 451 I 5896 450 I 5895 450 I 5893 450 I 5892 450 I C 
 O N 5922 490 M 5927 490 I 5927 450 I 5922 450 I 5922 490 I C 
 O N 5941 454 M 5952 454 I 5952 490 I 5956 490 I 5956 454 I 5967 454 I 5967 450 I 5941 450 I 5941 454 I C 
 O N 5986 450 M 5973 490 I 5978 490 I 5982 477 I 5996 477 I 6000 490 I 6005 490 I 5992 450 I 5986 450 I C 
5983 474 M 5989 454 I 5995 474 I 5983 474 I C 
 O N 6019 490 M 6039 490 I 6040 486 I 6024 486 I 6024 450 I 6019 450 I 6019 490 I C 
 O N 6070 490 M 6074 490 I 6074 474 I 6081 474 I 6083 474 I 6084 474 I 6086 473 I 6087 473 I 6088 473 I 6089 472 I 6090 472 I 6091 471 I 6092 470 I 6093 469 I 6093 468 I 6093 468 I 6094 467 I 6094 467 I 6094 466 I 6094 464 I 6095 463 I 6095 461 I 6095 461 I 6094 460 I 6094 459 I 6094 458 I 6094 458 I 6094 457 I 6094 457 I 6093 456 I 6093 455 I 6093 455 I 6092 454 I 6092 454 I 6091 453 I 6091 453 I 6090 452 I 6089 452 I 6089 451 I 6088 451 I 6087 451 I 6086 450 I 6085 450 I 6084 450 I 6082 450 I 6081 450 I 6070 450 I 6070 490 I C 
6079 454 M 6081 454 I 6082 454 I 6083 454 I 6084 455 I 6085 455 I 6086 455 I 6086 455 I 6087 456 I 6088 457 I 6088 457 I 6088 458 I 6089 459 I 6089 459 I 6089 460 I 6089 461 I 6089 462 I 6089 463 I 6089 464 I 6089 465 I 6089 465 I 6089 466 I 6088 467 I 6088 467 I 6087 468 I 6087 468 I 6086 469 I 6086 469 I 6085 469 I 6084 470 I 6083 470 I 6082 470 I 6081 470 I 6074 470 I 6074 454 I 6079 454 I C 
 O N 6114 450 M 6101 490 I 6105 490 I 6109 477 I 6124 477 I 6128 490 I 6133 490 I 6120 450 I 6114 450 I C 
6111 474 M 6117 454 I 6123 474 I 6111 474 I C 
 O N 6147 490 M 6151 490 I 6151 474 I 6158 474 I 6160 474 I 6161 474 I 6162 473 I 6163 473 I 6165 473 I 6166 472 I 6167 472 I 6168 471 I 6169 470 I 6169 469 I 6170 468 I 6170 468 I 6170 467 I 6170 467 I 6171 466 I 6171 464 I 6171 463 I 6171 461 I 6171 461 I 6171 460 I 6171 459 I 6171 458 I 6171 458 I 6171 457 I 6170 457 I 6170 456 I 6170 455 I 6169 455 I 6169 454 I 6168 454 I 6168 453 I 6167 453 I 6167 452 I 6166 452 I 6165 451 I 6165 451 I 6164 451 I 6163 450 I 6162 450 I 6160 450 I 6159 450 I 6158 450 I 6147 450 I 6147 490 I C 
6156 454 M 6157 454 I 6159 454 I 6160 454 I 6161 455 I 6162 455 I 6162 455 I 6163 455 I 6164 456 I 6164 457 I 6165 457 I 6165 458 I 6165 459 I 6166 459 I 6166 460 I 6166 461 I 6166 462 I 6166 463 I 6166 464 I 6166 465 I 6166 465 I 6165 466 I 6165 467 I 6165 467 I 6164 468 I 6163 468 I 6163 469 I 6162 469 I 6162 469 I 6161 470 I 6160 470 I 6159 470 I 6158 470 I 6151 470 I 6151 454 I 6156 454 I C 
 O N 6186 490 M 6208 490 I 6208 485 I 6191 485 I 6191 471 I 6204 471 I 6204 467 I 6191 467 I 6191 454 I 6207 454 I 6207 450 I 6186 450 I 6186 490 I C 
 O N 6225 490 M 6230 490 I 6230 472 I 6230 472 I 6231 472 I 6232 472 I 6232 472 I 6233 473 I 6233 473 I 6234 474 I 6234 474 I 6236 477 I 6238 479 I 6239 481 I 6241 483 I 6242 485 I 6243 487 I 6244 488 I 6244 490 I 6250 490 I 6250 489 I 6250 489 I 6249 488 I 6249 487 I 6248 486 I 6247 485 I 6247 484 I 6246 484 I 6245 482 I 6245 481 I 6244 480 I 6243 479 I 6242 478 I 6242 477 I 6241 477 I 6241 476 I 6241 476 I 6241 475 I 6240 475 I 6240 474 I 6239 474 I 6238 473 I 6237 472 I 6238 472 I 6239 472 I 6240 472 I 6241 471 I 6242 471 I 6243 471 I 6244 470 I 6245 469 I 6245 469 I 6246 468 I 6247 467 I 6247 466 I 6247 465 I 6248 464 I 6248 463 I 6248 462 I 6248 461 I 6248 460 I 6248 460 I 6248 459 I 6248 458 I 6248 458 I 6248 457 I 6247 457 I 6247 456 I 6246 455 I 6246 454 I 6245 453 I 6244 453 I 6243 452 I 6243 451 I 6242 451 I 6240 451 I 6239 450 I 6238 450 I 6236 450 I 6234 450 I 6225 450 I 6225 490 I C 
6234 454 M 6235 454 I 6236 454 I 6237 454 I 6238 454 I 6239 455 I 6240 455 I 6240 455 I 6241 456 I 6242 456 I 6242 457 I 6242 457 I 6243 458 I 6243 459 I 6243 459 I 6243 460 I 6243 461 I 6243 462 I 6243 463 I 6243 464 I 6243 464 I 6242 465 I 6242 466 I 6242 466 I 6241 467 I 6241 467 I 6240 468 I 6239 468 I 6238 468 I 6237 468 I 6236 469 I 6235 469 I 6234 469 I 6230 469 I 6230 454 I 6234 454 I C 
 O N 6284 490 M 6289 490 I 6289 471 I 6301 471 I 6301 467 I 6289 467 I 6289 454 I 6304 454 I 6305 450 I 6284 450 I 6284 490 I C 
 O N 6324 450 M 6311 490 I 6316 490 I 6319 477 I 6334 477 I 6338 490 I 6343 490 I 6330 450 I 6324 450 I C 
6321 474 M 6327 454 I 6333 474 I 6321 474 I C 
 O N 6370 450 M 6369 450 I 6368 450 I 6367 450 I 6366 450 I 6366 450 I 6365 450 I 6364 451 I 6363 451 I 6363 451 I 6362 452 I 6361 452 I 6360 453 I 6360 453 I 6359 454 I 6359 455 I 6358 455 I 6357 456 I 6357 457 I 6356 458 I 6356 458 I 6356 459 I 6355 460 I 6355 461 I 6354 462 I 6354 463 I 6354 464 I 6354 465 I 6354 466 I 6353 467 I 6353 468 I 6353 469 I 6353 470 I 6353 471 I 6353 472 I 6353 473 I 6354 474 I 6354 475 I 6354 476 I 6354 477 I 6354 478 I 6355 479 I 6355 480 I 6355 481 I 6356 482 I 6356 483 I 6357 484 I 6357 484 I 6358 485 I 6359 486 I 6359 486 I 6360 487 I 6360 487 I 6361 488 I 6362 488 I 6363 489 I 6363 489 I 6364 489 I 6365 489 I 6366 490 I 6366 490 I 6367 490 I 6368 490 I 6369 490 I 6370 490 I 6371 490 I 6372 490 I 6374 490 I 6375 489 I 6377 489 I 6378 488 I 6379 488 I 6381 487 I 6378 484 I 6377 484 I 6376 485 I 6375 485 I 6374 486 I 6373 486 I 6372 486 I 6371 486 I 6370 486 I 6369 486 I 6368 486 I 6367 486 I 6366 485 I 6365 485 I 6364 484 I 6363 484 I 6362 483 I 6361 482 I 6361 482 I 6361 481 I 6360 481 I 6360 479 I 6359 478 I 6359 476 I 6359 474 I 6358 473 I 6358 471 I 6358 469 I 6359 467 I 6359 465 I 6359 463 I 6360 462 I 6360 460 I 6361 459 I 6361 458 I 6362 457 I 6362 457 I 6363 456 I 6363 456 I 6363 455 I 6364 455 I 6364 455 I 6365 454 I 6366 454 I 6366 454 I 6367 454 I 6367 454 I 6368 453 I 6370 453 I 6371 453 I 6372 453 I 6373 454 I 6374 454 I 6375 454 I 6376 455 I 6376 455 I 6377 456 I 6380 453 I 6379 452 I 6378 451 I 6376 451 I 6375 450 I 6374 450 I 6373 450 I 6371 450 I 6370 450 I C 
 O N 6391 454 M 6402 454 I 6402 490 I 6406 490 I 6406 454 I 6417 454 I 6417 450 I 6391 450 I 6391 454 I C 
 O N 6427 470 M 6427 471 I 6427 472 I 6427 473 I 6428 474 I 6428 476 I 6428 477 I 6428 478 I 6428 479 I 6429 480 I 6429 481 I 6429 481 I 6430 482 I 6430 483 I 6431 484 I 6431 485 I 6432 485 I 6433 486 I 6433 486 I 6434 487 I 6434 487 I 6435 488 I 6436 488 I 6436 489 I 6437 489 I 6438 489 I 6438 490 I 6439 490 I 6440 490 I 6441 490 I 6442 490 I 6442 490 I 6443 490 I 6445 490 I 6446 490 I 6447 490 I 6449 489 I 6450 489 I 6451 488 I 6452 487 I 6453 487 I 6454 486 I 6455 485 I 6455 484 I 6456 484 I 6456 483 I 6457 482 I 6457 481 I 6458 480 I 6458 479 I 6458 478 I 6459 477 I 6459 476 I 6459 474 I 6459 473 I 6459 472 I 6459 470 I 6459 468 I 6459 466 I 6459 464 I 6458 462 I 6458 460 I 6457 459 I 6457 458 I 6456 457 I 6456 457 I 6455 456 I 6455 455 I 6455 455 I 6454 454 I 6453 453 I 6453 453 I 6452 452 I 6452 452 I 6451 452 I 6450 451 I 6449 451 I 6448 450 I 6447 450 I 6446 450 I 6445 450 I 6444 449 I 6443 449 I 6442 449 I 6441 449 I 6440 450 I 6440 450 I 6439 450 I 6438 450 I 6437 450 I 6436 451 I 6436 451 I 6435 451 I 6434 452 I 6434 452 I 6433 453 I 6433 454 I 6432 454 I 6431 455 I 6431 455 I 6430 456 I 6430 457 I 6430 458 I 6429 459 I 6429 459 I 6429 460 I 6428 461 I 6428 462 I 6428 463 I 6428 464 I 6427 465 I 6427 467 I 6427 470 I C 
6443 453 M 6444 453 I 6446 453 I 6446 454 I 6447 454 I 6447 454 I 6448 454 I 6449 455 I 6449 455 I 6449 455 I 6450 456 I 6450 456 I 6451 457 I 6451 457 I 6451 458 I 6452 459 I 6452 460 I 6453 461 I 6453 463 I 6453 465 I 6454 467 I 6454 469 I 6454 471 I 6454 473 I 6454 475 I 6453 477 I 6453 479 I 6453 480 I 6452 481 I 6452 482 I 6451 483 I 6450 484 I 6449 485 I 6449 485 I 6448 486 I 6447 486 I 6446 487 I 6445 487 I 6443 487 I 6442 487 I 6441 486 I 6440 486 I 6440 486 I 6439 486 I 6438 486 I 6438 485 I 6437 485 I 6437 485 I 6437 484 I 6436 484 I 6436 483 I 6435 483 I 6435 482 I 6434 481 I 6434 480 I 6433 478 I 6433 477 I 6433 475 I 6433 473 I 6433 471 I 6433 469 I 6433 467 I 6433 465 I 6433 463 I 6433 462 I 6434 460 I 6434 459 I 6434 458 I 6435 457 I 6436 456 I 6437 455 I 6437 455 I 6438 454 I 6439 454 I 6441 453 I 6442 453 I 6443 453 I C 
 O N 6477 490 M 6481 490 I 6481 472 I 6482 472 I 6483 472 I 6483 472 I 6484 472 I 6484 473 I 6485 473 I 6485 474 I 6486 474 I 6487 477 I 6489 479 I 6491 481 I 6492 483 I 6493 485 I 6494 487 I 6495 488 I 6496 490 I 6502 490 I 6501 489 I 6501 489 I 6501 488 I 6500 487 I 6500 486 I 6499 485 I 6498 484 I 6498 484 I 6497 482 I 6496 481 I 6495 480 I 6495 479 I 6494 478 I 6493 477 I 6493 477 I 6493 476 I 6492 476 I 6492 475 I 6492 475 I 6491 474 I 6491 474 I 6490 473 I 6489 472 I 6489 472 I 6490 472 I 6491 472 I 6492 471 I 6494 471 I 6494 471 I 6495 470 I 6496 469 I 6497 469 I 6498 468 I 6498 467 I 6499 466 I 6499 465 I 6499 464 I 6500 463 I 6500 462 I 6500 461 I 6500 460 I 6500 460 I 6500 459 I 6499 458 I 6499 458 I 6499 457 I 6499 457 I 6499 456 I 6498 455 I 6497 454 I 6497 453 I 6496 453 I 6495 452 I 6494 451 I 6493 451 I 6492 451 I 6491 450 I 6489 450 I 6488 450 I 6486 450 I 6477 450 I 6477 490 I C 
6486 454 M 6487 454 I 6488 454 I 6489 454 I 6490 454 I 6491 455 I 6491 455 I 6492 455 I 6493 456 I 6493 456 I 6494 457 I 6494 457 I 6494 458 I 6494 459 I 6495 459 I 6495 460 I 6495 461 I 6495 462 I 6495 463 I 6494 464 I 6494 464 I 6494 465 I 6494 466 I 6493 466 I 6493 467 I 6492 467 I 6491 468 I 6491 468 I 6490 468 I 6489 468 I 6488 469 I 6487 469 I 6486 469 I 6481 469 I 6481 454 I 6486 454 I C 
 O N 6524 474 M 6524 490 I 6528 490 I 6528 474 I 6541 450 I 6536 450 I 6528 465 I 6528 466 I 6528 466 I 6527 467 I 6527 468 I 6526 469 I 6526 470 I 6526 469 I 6525 468 I 6525 467 I 6525 466 I 6524 466 I 6524 465 I 6517 450 I 6511 450 I 6524 474 I C 
 O /DeviceGray dup setcolorspace /colspABC exch def
0 5 scol Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Text 5.0 0
/TextInit{TextInitialised? not{/Pscript_Windows_Font & d/TextInitialised? T d
/fM[1 0 0 1 0 0]d/mFM matrix d/iMat[1 0 0.212557 1 0 0]d}if}b/copyfont{1 ^
length add dict `{1 ^/FID ne{d}{! !}?}forall & E}b/EncodeDict 11 dict d/bullets
{{/bullet}repeat}b/rF{3 copyfont @ ` ~ EncodeDict ~ get/Encoding ~ 3 ^/0 eq{&
/CharStrings known{CharStrings/Eth known not{! EncodeDict/ANSIEncodingOld get}
if}if}if d E}b/mF{@ 7 1 $ findfont ~{@/Encoding get @ StandardEncoding eq{! T}{
{ISOLatin1Encoding}stopped{! F}{eq}?{T}{@ ` T 32 1 127{Encoding 1 ^ get
StandardEncoding 3 -1 $ get eq and}for E}?}?}{F}?{1 ^ ~ rF}{0 copyfont}? 6 -2 $
! ! ~ !/pd_charset @ where{~ get 128 eq{@ FDV 2 copy get @ length array copy
put pd_CoverFCRange}if}{!}? 2 ^ ~ definefont fM 5 4 -1 $ put fM 4 0 put fM
makefont Pscript_Windows_Font 3 1 $ put}b/sLT{: Lw -M currentpoint snap M 0 - 0
Lc K ;}b/xUP null d/yUP null d/uW null d/xSP null d/ySP null d/sW null d/sSU{N
/uW ~ d/yUP ~ d/xUP ~ d}b/sU{xUP yUP uW sLT}b/sST{N/sW ~ d/ySP ~ d/xSP ~ d}b/sT
{xSP ySP sW sLT}b/sR{: + R 0 0 M}b/sRxy{: matrix astore concat 0 0 M}b/eR/; , d
/AddOrigFP{{&/FontInfo known{&/FontInfo get length 6 add}{6}? dict `
/WinPitchAndFamily ~ d/WinCharSet ~ d/OrigFontType ~ d/OrigFontStyle ~ d
/OrigFontName ~ d & E/FontInfo ~ d}{! ! ! ! !}?}b/mFS{makefont
Pscript_Windows_Font 3 1 $ put}b/mF42D{0 copyfont `/FontName ~ d 2 copy ~ sub 1
add dict `/.notdef 0 d 2 copy 1 ~{@ 3 ^ sub Encoding ~ get ~ d}for & E
/CharStrings ~ d ! ! & @ E/FontName get ~ definefont}b/mF42{15 dict ` @ 4 1 $
FontName ~ d/FontType 0 d/FMapType 2 d/FontMatrix[1 0 0 1 0 0]d 1 ^ 254 add 255
idiv @ array/Encoding ~ d 0 1 3 -1 $ 1 sub{@ Encoding 3 1 $ put}for/FDepVector
Encoding length array d/CharStrings 2 dict `/.notdef 0 d & E d 0 1 Encoding
length 1 sub{@ @ 10 lt{! FontName length 1 add string}{100 lt{FontName length 2
add string}{FontName length 3 add string}?}? @ 0 FontName @ length string cvs
putinterval @ 3 -1 $ @ 4 1 $ 3 string cvs FontName length ~ putinterval cvn 1 ^
256 mul @ 255 add 3 -1 $ 4 ^ findfont mF42D FDepVector 3 1 $ put}for & @ E
/FontName get ~ definefont ! ! ! mF}b/mF_OTF_V{~ ! ~ ! 4 -1 $ ! findfont 2 ^ ~
definefont fM @ @ 4 6 -1 $ neg put 5 0 put 90 matrix R matrix concatmatrix
makefont Pscript_Windows_Font 3 1 $ put}b/mF_TTF_V{3{~ !}repeat 3 -1 $ !
findfont 1 ^ ~ definefont Pscript_Windows_Font 3 1 $ put}b/UmF{L2?
{Pscript_Windows_Font ~ undef}{!}?}b/UmF42{@ findfont/FDepVector get{/FontName
get undefinefont}forall undefinefont}b
%%EndResource
end reinitialize
Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Encoding256 5.0 0
/CharCol256Encoding[/.notdef/breve/caron/dotaccent/dotlessi/fi/fl/fraction
/hungarumlaut/Lslash/lslash/minus/ogonek/ring/Zcaron/zcaron/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/space/exclam/quotedbl/numbersign
/dollar/percent/ampersand/quotesingle/parenleft/parenright/asterisk/plus/comma
/hyphen/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O/P/Q/R/S
/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore/grave
/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright
/asciitilde/.notdef/Euro/.notdef/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef
/.notdef/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis/.notdef/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/.notdef/registered
/macron/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph
/periodcentered/cedilla/onesuperior/ordmasculine/guillemotright/onequarter
/onehalf/threequarters/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis
/Aring/AE/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute
/Icircumflex/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve
/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis]def EncodeDict/256 CharCol256Encoding put
%%EndResource
end reinitialize

%%IncludeResource: font Times-Roman
F /F0 0 /256 T /Times-Roman mF 
/F0S64 F0 [100 0 0 -100 0 0 ] mFS
F0S64 Ji 
6545 539 M ( )S 
/DeviceRGB dup setcolorspace /colspABC exch def
: N 462 548 6095 6 rp C 
/DeviceGray dup setcolorspace /colspABC exch def
0 5 scol  L ; /DeviceGray dup setcolorspace /colspABC exch def
0 5 scol 474 9541 M (Stefan)[56 28 44 33 44  0]xS 
729 9541 M ( )S 
754 9541 M (Scherer)[56 44 50 44 34 44  0]xS 
1059 9541 M (;)S 
1087 9541 M ( )S 

%%IncludeResource: font Times-Bold
F /F1 0 /256 T /Times-Bold mF 
/F1S64 F1 [100 0 0 -100 0 0 ] mFS
F1S64 Ji 
1112 9541 M (SEAL)[56 67 72  0]xS 
1374 9541 M ( )S 
1399 9541 M (Systems)[56 50 39 33 45 82  0]xS 
F0S64 Ji 
1744 9541 M ( )S 
3202 9541 M (14.09.2006)[50 50 25 50 50 25 50 50 50  0]xS 
3652 9541 M ( )S 
6371 9541 M (1)S 
6421 9541 M (/)S 
6449 9541 M (1)S 
6499 9541 M ( )S 
/DeviceRGB dup setcolorspace /colspABC exch def
: N 462 9438 6095 4 rp C 
/DeviceGray dup setcolorspace /colspABC exch def
0 5 scol  L ; /DeviceGray dup setcolorspace /colspABC exch def
0 5 scol 
%%IncludeResource: font Courier
F /F2 0 /256 T /Courier mF 
/F2S32 F2 [50 0 0 -50 0 0 ] mFS
F2S32 Ji 
474 9608 M (d:)[30  0]xS 
534 9608 M (\\)S 
564 9608 M (testfiles)[30 30 30 30 30 30 30 30  0]xS 
834 9608 M (\\)S 
864 9608 M (sample)[30 30 30 30 30  0]xS 
1044 9608 M (-)S 
1074 9608 M (a3.doc)[30 30 30 30 30  0]xS 
/F0S43 F0 [67 0 0 -67 0 0 ] mFS
F0S43 Ji 
1254 9608 M ( )S 
F0S64 Ji 
474 711 M (Beispiel DIN A)[66 44 28 39 50 28 44 28 25 73 32 73 25  0]xS 
1101 711 M (3)S 
1151 711 M ( Word)[25 95 50 33  0]xS 
1404 711 M ( )S 

%%  gsave initclip
%%  5 setlinewidth 1 0 0 setrgbcolor
%%  newpath 462 300 moveto
%%   6590 300 lineto
%%   6590 9624 lineto
%%   462 9624 lineto
%%   462 300 lineto stroke 
%%  grestore

%%
%%BeginPLOSSYSInformation ============================== 
%%
%%  ddihook.cpp Version 1.6 05.10.2005 
%%
%%====================================================== 
%%
%%PathCount              : 44
%%TextCount              : 28
%%ImageCount             : 2
%%
%%BitmpapSize X          : 6899
%%BitmpapSize Y          : 9808
%%PFormatSize  X         : 827
%%PFormatSize  Y         : 1176
%%
%%dmOrientation          : 1 
%%dmDisplayOrientation   : 100 
%%dmColor                : 2 
%%
%%Minimal UserCoord X/Y  :      462      300
%%Maximal UserCoord X/Y  :     6590     9624
%%
%%Minimal PSCoord X/Y    :       55       22
%%Maximal PSCoord X/Y    :      791     1141
%%
%%Print area ( in mm )
%%Minimal Coordinates    :       19        7
%%Maximal Coordinates    :      279      403
%%
%%                                xmin     ymin     xmax     ymax 
%%PLSHED: $ PLS_PLOTSIZE    == "  0.0000   0.0000   0.2921   0.4152 "
%%PLSHED: $ PLS_PRINTAREA   == "  0.0190   0.0070   0.2790   0.4030 "
%%PLSHED: $ PLS_PRINTAREA_1 == "  0.0190   0.0070   0.2790   0.4030 "
%%PLSHED: $ PLS_PSCONVERTER == "GhostScript"
%%
%%EndPLOSSYSInformation ============================== 
%%
LH
(%%[Page: 1]%%) = 
%%PageTrailer

%% PageCount: 1
%%Trailer
%%BoundingBox: 14 14 842 1191
%%DocumentNeededResources: 
%%+ font Times-Roman
%%+ font Times-Bold
%%+ font Courier
%%DocumentSuppliedResources: 
%%+ procset Pscript_WinNT_VMErrorHandler 5.0 0
%%+ procset Pscript_FatalError 5.0 0
%%+ procset Pscript_Win_Basic 5.0 0
%%+ procset Pscript_Win_Utils_L2 5.0 0
%%+ procset Pscript_Win_GdiObject 5.0 0
%%+ procset Pscript_Win_GdiObject_L3 5.0 0
%%+ procset Pscript_Text 5.0 0
%%+ procset Pscript_Encoding256 5.0 0
Pscript_WinNT_Incr dup /terminate get exec
ehsave restore
%%Pages: 1
(%%[LastPage]%%) = 
%%EOF
